<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
">

	<!-- 해당 경로는 security 적용하지 않음 -->
	<security:http pattern="\A/WEB-INF/jsp/.*\Z" request-matcher="regex" security="none"/>
	<security:http pattern="/css/**" security="none" />
	<security:http pattern="/images/**" security="none" />
	<security:http pattern="/ws/**" security="none" />

	<!--

	 -->
	<security:http auto-config="true" use-expressions="true">
		<security:headers defaults-disabled="true">
			<security:content-type-options />
			<security:frame-options policy="SAMEORIGIN"/>
			<security:xss-protection block="false"/>
			<security:content-security-policy policy-directives="
					default-src 'self';
					connect-src 'self';
					script-src 'self' 'unsafe-inline';
					worker-src http: blob: 'unsafe-inline';
					img-src 'self';
					style-src 'self' 'unsafe-inline';
					object-src 'none'"/>
		</security:headers>

		<!-- csrf 사용 -->
		<security:csrf disabled="false"/>

		<security:intercept-url pattern="/**" access="permitAll" />

		<!--
			login-page : login page url(login page를 설정하지 않으면 spring에서 제공하는 로그인페이지를 사용한다)
			login-processing-url : login처리할 url
		 -->
		<security:form-login
			login-page="/login"
			login-processing-url="/user/login"
			username-parameter="user_id"
			password-parameter="password"
			authentication-success-handler-ref="authenticationSuccessHandler"
			authentication-failure-handler-ref="authenticationFailureHandler"
			/>

		<security:session-management session-fixation-protection="newSession" />

	</security:http>

	<!-- 인증 실패 후 처리 bean -->
	<bean name="authenticationSuccessHandler" class="com.springweb.comm.security.AuthenticationSuccessHandler" />

	<!-- 인증 성공 후 처리 bean -->
	<bean name="authenticationFailureHandler" class="com.springweb.comm.security.AuthenticationFailureHandler" />

	<security:authentication-manager>
		<security:authentication-provider ref="customAuthenticationProvider"/>
	</security:authentication-manager>

	<!-- 인증을 처리 bean -->
	<bean id="customAuthenticationProvider" class="com.springweb.comm.security.CustomAuthenticationProvider"/>

</beans>